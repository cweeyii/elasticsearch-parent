<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	   http://www.springframework.org/schema/tx
	   http://www.springframework.org/schema/tx/spring-tx.xsd
	   http://www.springframework.org/schema/aop
	   http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context-3.2.xsd">


    <!-- ==============================数据源配置  START================================ -->

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:database.properties</value>
                <value>classpath:es.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${database.url}"/>
        <property name="username" value="${database.username}"/>
        <property name="password" value="${database.password}"/>
        <property name="initialSize" value="${pool.initialPoolSize}"/>
        <property name="minIdle" value="${pool.minPoolSize}"/>
        <property name="maxActive" value="${pool.maxPoolSize}"/>
        <property name="filters" value="stat,log4j,counter"/>
        <property name="connectionProperties" value="druid.stat.mergeSql=true"/>
        <!--<property name="removeAbandoned" value="true" />-->
    </bean>

    <!-- ========mybatis配置 START============= -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 配置扫描Mapper XML的位置 -->
        <property name="mapperLocations"
                  value="classpath*:com/cweeyii/**/dao/mapper/impl/*Mapper.xml"/>
    </bean>
    <!-- 配置扫描Mapper接口的包路径 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.cweeyii.**.dao.mapper;"/>
    </bean>

    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory"/>
    </bean>
    <!-- ========mybatis配置 END============= -->

    <!-- ========jdbcTemplate配置 START============= -->

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
          lazy-init="false">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- ========jdbcTemplate配置 END============= -->
    <!-- ==============================数据源配置   END================================ -->

    <bean id="mybatisTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <constructor-arg ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="mybatisTransactionManager"/>

    <tx:advice id="mybatisAdvice" transaction-manager="mybatisTransactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED" timeout="60"/>
            <tx:method name="insert*" propagation="REQUIRED" timeout="60"/>
            <tx:method name="add*" propagation="REQUIRED" timeout="60"/>
            <tx:method name="update*" propagation="REQUIRED" timeout="60"/>
            <tx:method name="delete*" propagation="REQUIRED" timeout="60"/>
            <tx:method name="remove*" propagation="REQUIRED" timeout="60"/>
            <tx:method name="accept*" propagation="REQUIRED" timeout="60"/>
            <tx:method name="reject*" propagation="REQUIRED" timeout="60"/>
            <tx:method name="execute*" propagation="REQUIRED" timeout="60"/>
            <tx:method name="del*" propagation="REQUIRED" timeout="60"/>
            <tx:method name="recover*" propagation="REQUIRED" timeout="60"/>
            <tx:method name="sync*" propagation="REQUIRED" timeout="60"/>
            <tx:method name="start*" propagation="REQUIRED" timeout="60"/>
            <tx:method name="stop*" propagation="REQUIRED" timeout="60"/>
            <tx:method name="import*" propagation="REQUIRED" timeout="60"/>
            <tx:method name="change*" propagation="REQUIRED" timeout="60"/>
            <tx:method name="rollback*" propagation="REQUIRED" timeout="60"/>
            <tx:method name="create*" propagation="REQUIRED" timeout="60"/>
            <tx:method name="replace*" propagation="REQUIRED" timeout="60"/>
            <tx:method name="do*" propagation="REQUIRED" timeout="60"/>
            <tx:method name="modify*" propagation="REQUIRED" timeout="60"/>
            <tx:method name="process*" propagation="REQUIRED" timeout="60"/>
            <tx:method name="finish*" propagation="REQUIRED" timeout="60"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="mybatisPointcut"
                      expression="execution(public * com.cweeyii.base.*.service.*.*(..))"/>
        <aop:advisor pointcut-ref="mybatisPointcut" advice-ref="mybatisAdvice"/>
    </aop:config>

    <context:annotation-config/>

    <context:component-scan base-package="com.cweeyii"/>

</beans>