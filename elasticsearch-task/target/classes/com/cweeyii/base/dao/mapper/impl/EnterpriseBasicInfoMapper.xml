<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cweeyii.base.dao.mapper.EnterpriseBasicInfoMapper">
    <resultMap id="BaseResultMap" type="com.cweeyii.base.domain.EnterpriseBasicInfo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="enterprise_name" property="enterpriseName" jdbcType="VARCHAR"/>
        <result column="longitude" property="longitude" jdbcType="DOUBLE"/>
        <result column="latitude" property="latitude" jdbcType="DOUBLE"/>
        <result column="city_name" property="cityName" jdbcType="VARCHAR"/>
        <result column="district_name" property="districtName" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="business_category" property="businessCategory" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, enterprise_name, longitude, latitude, city_name, district_name, address, phone, 
    business_category
  </sql>

    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.cweeyii.base.domain.EnterpriseBasicInfoExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from enterprise_basic_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from enterprise_basic_info
        where id = #{id,jdbcType=BIGINT}
    </select>

    <insert id="insert" parameterType="com.cweeyii.base.domain.EnterpriseBasicInfo">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into enterprise_basic_info (enterprise_name, longitude, latitude,
        city_name, district_name, address,
        phone, business_category)
        values (#{enterpriseName,jdbcType=VARCHAR}, #{longitude,jdbcType=DOUBLE}, #{latitude,jdbcType=DOUBLE},
        #{cityName,jdbcType=VARCHAR}, #{districtName,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
        #{phone,jdbcType=VARCHAR}, #{businessCategory,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.cweeyii.base.domain.EnterpriseBasicInfo">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into enterprise_basic_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="enterpriseName != null">
                enterprise_name,
            </if>
            <if test="longitude != null">
                longitude,
            </if>
            <if test="latitude != null">
                latitude,
            </if>
            <if test="cityName != null">
                city_name,
            </if>
            <if test="districtName != null">
                district_name,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="businessCategory != null">
                business_category,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="enterpriseName != null">
                #{enterpriseName,jdbcType=VARCHAR},
            </if>
            <if test="longitude != null">
                #{longitude,jdbcType=DOUBLE},
            </if>
            <if test="latitude != null">
                #{latitude,jdbcType=DOUBLE},
            </if>
            <if test="cityName != null">
                #{cityName,jdbcType=VARCHAR},
            </if>
            <if test="districtName != null">
                #{districtName,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="businessCategory != null">
                #{businessCategory,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.cweeyii.base.domain.EnterpriseBasicInfoExample"
            resultType="java.lang.Integer">
        select count(*) from enterprise_basic_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map">
        update enterprise_basic_info
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.enterpriseName != null">
                enterprise_name = #{record.enterpriseName,jdbcType=VARCHAR},
            </if>
            <if test="record.longitude != null">
                longitude = #{record.longitude,jdbcType=DOUBLE},
            </if>
            <if test="record.latitude != null">
                latitude = #{record.latitude,jdbcType=DOUBLE},
            </if>
            <if test="record.cityName != null">
                city_name = #{record.cityName,jdbcType=VARCHAR},
            </if>
            <if test="record.districtName != null">
                district_name = #{record.districtName,jdbcType=VARCHAR},
            </if>
            <if test="record.address != null">
                address = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.phone != null">
                phone = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.businessCategory != null">
                business_category = #{record.businessCategory,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>

    <update id="updateByExample" parameterType="map">
        update enterprise_basic_info
        set id = #{record.id,jdbcType=BIGINT},
        enterprise_name = #{record.enterpriseName,jdbcType=VARCHAR},
        longitude = #{record.longitude,jdbcType=DOUBLE},
        latitude = #{record.latitude,jdbcType=DOUBLE},
        city_name = #{record.cityName,jdbcType=VARCHAR},
        district_name = #{record.districtName,jdbcType=VARCHAR},
        address = #{record.address,jdbcType=VARCHAR},
        phone = #{record.phone,jdbcType=VARCHAR},
        business_category = #{record.businessCategory,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.cweeyii.base.domain.EnterpriseBasicInfo">
        update enterprise_basic_info
        <set>
            <if test="enterpriseName != null">
                enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
            </if>
            <if test="longitude != null">
                longitude = #{longitude,jdbcType=DOUBLE},
            </if>
            <if test="latitude != null">
                latitude = #{latitude,jdbcType=DOUBLE},
            </if>
            <if test="cityName != null">
                city_name = #{cityName,jdbcType=VARCHAR},
            </if>
            <if test="districtName != null">
                district_name = #{districtName,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="businessCategory != null">
                business_category = #{businessCategory,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.cweeyii.base.domain.EnterpriseBasicInfo">
    update enterprise_basic_info
    set enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DOUBLE},
      latitude = #{latitude,jdbcType=DOUBLE},
      city_name = #{cityName,jdbcType=VARCHAR},
      district_name = #{districtName,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      business_category = #{businessCategory,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="selectByPage" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from
        enterprise_basic_info
        where id > #{begId,jdbcType=BIGINT}
        limit #{pageSize,jdbcType=INTEGER}
    </select>

</mapper>